@using PersonalWebsite.Extensions
@using EasyAuth
@model PersonalWebsite.Models.Blog.SinglePostViewModel

@{ 
    
}

<article>
    <h3>@Html.ActionLink(Model.BlogPost.BlogTitle, MVC.Blog.Read(Model.BlogPost.BlogPostId, Model.BlogPost.Slug))</h3>
    <h6>Posted @PersonalWebsite.Helpers.DateHelper.GetReadableDate(Model.BlogPost.DatePosted).</h6>
       
    <div class="blog-post">
        @Html.Markdown(Model.BlogPost.BlogContent)
    </div>

    <p class="post-tag-text">
        @{            
            var pretag = "";

            // Model.ShowComments == true means it's a single blog post
            // Model.ShowComments == false means it's displayed in a list
            if (Model.ShowComments)
            {
                // and so, as it's a single blog post, we open the posted month in the blog archive
                HttpContext.Current.Items.Add("ArchiveOpenDate", Model.BlogPost.DatePosted);
            }
            else
            {   
                // as it's in a list, we provide a link to the post and it's comments
                var link = Html.ActionLink("No Comments",
                    MVC.Blog.Read(Model.BlogPost.BlogPostId, Model.BlogPost.Slug),
                    htmlAttributes: new { },
                    protocol: null,
                    hostName: null, 
                    fragment: "disqus_thread"
                );
                pretag += link.ToString() + " | ";
            }
            
            // should we show or hide the Edit Post link (makes my life easier)?
            if (Authentication.IsAuthenticated())
            {                
                var link = Html.ActionLink("Edit Post", MVC.Blog.Edit(Model.BlogPost.BlogPostId));                
                pretag += link.ToString() + " | ";
            }
        }

        @Html.Raw(pretag)

        Tags: 
        @foreach (var tag in Model.BlogPost.Tags.OrderBy(x => x.TagName))
        {
            @Html.ActionLink(tag.TagName, MVC.Blog.Tagged(tag.TagId, tag.Slug), 
                htmlAttributes: new { @class = "label label-spacing" })
        }
    </p>

    @if (Model.ShowComments)
    {
        <div id="disqus_thread"></div>
        <script type="text/javascript">
            var disqus_shortname = 'thvvieira';
            (function () {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        </script>
        <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    }
</article>